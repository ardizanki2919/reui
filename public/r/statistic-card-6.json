{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "statistic-card-6",
  "type": "registry:block",
  "dependencies": [
    "clsx",
    "tailwind-merge",
    "class-variance-authority",
    "lucide-react"
  ],
  "registryDependencies": [
    "https://reui.io/r/card.json"
  ],
  "files": [
    {
      "path": "registry/default/blocks/cards/statistic-cards/statistic-card-6.tsx",
      "content": "import { Card, CardContent } from '@/registry/default/ui/card';\nimport { Mail, MousePointer2, User2 } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nconst stats = [\n  {\n    icon: User2,\n    title: 'Active Contacts',\n    value: 202123,\n    delta: 22325,\n    deltaPercent: 12.2,\n    positive: true,\n    time: 'last 12 months',\n  },\n  {\n    icon: Mail,\n    title: 'Emails Opened',\n    value: 78500,\n    delta: 8500,\n    deltaPercent: 12.1,\n    positive: true,\n    time: 'last 12 months',\n  },\n  {\n    icon: MousePointer2,\n    title: 'Avg Click Rate',\n    value: 26.2,\n    isPercent: true,\n    delta: -2.3,\n    deltaPercent: -8.1,\n    positive: false,\n    time: 'last 12 months',\n  },\n];\n\nexport default function StatisticCard6() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-6 lg:p-12\">\n      <div className=\"grow grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {stats.map((stat, index) => (\n          <Card key={index}>\n            <CardContent className=\"space-y-5\">\n              {/* Header */}\n              <div className=\"flex flex-col items-start justify-center gap-1.5\">\n                <stat.icon className=\"w-6 text-muted-foreground\" />\n                <h3 className=\"text-sm text-muted-foreground/90 font-medium\">{stat.title}</h3>\n              </div>\n\n              {/* Content */}\n              <div className=\"space-y-1.5\">\n                {/* Value */}\n                <div className=\"text-2xl font-semibold text-foreground tracking-tight\">\n                  {stat.isPercent ? `${stat.value}%` : stat.value.toLocaleString()}\n                </div>\n\n                {/* Delta */}\n                <div className=\"flex items-center gap-1.5 text-xs\">\n                  <span className={cn('font-medium', stat.positive ? 'text-green-500' : 'text-destructive')}>\n                    {stat.positive ? '+' : ''}\n                    {stat.delta.toLocaleString()}\n                    {stat.deltaPercent !== undefined && (\n                      <>\n                        {' '}\n                        ({stat.deltaPercent > 0 ? '+' : ''}\n                        {stat.deltaPercent}%)\n                      </>\n                    )}\n                  </span>\n                  <span className=\"bg-muted-foreground/30 size-1 rounded-full\"></span>\n                  <span className=\"text-muted-foreground\">{stat.time}</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:block"
    },
    {
      "path": "registry/default/ui/card.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\n// Define CardContext\ntype CardContextType = {\n  variant: 'default' | 'accent';\n};\n\nconst CardContext = React.createContext<CardContextType>({\n  variant: 'default', // Default value\n});\n\n// Hook to use CardContext\nconst useCardContext = () => {\n  const context = React.useContext(CardContext);\n  if (!context) {\n    throw new Error('useCardContext must be used within a Card component');\n  }\n  return context;\n};\n\n// Variants\nconst cardVariants = cva('flex flex-col items-stretch text-card-foreground rounded-xl', {\n  variants: {\n    variant: {\n      default: 'bg-card border border-border shadow-xs black/5',\n      accent: 'bg-muted shadow-xs p-1',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nconst cardHeaderVariants = cva('flex items-center justify-between flex-wrap px-5 min-h-14 gap-2.5', {\n  variants: {\n    variant: {\n      default: 'border-b border-border',\n      accent: '',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nconst cardContentVariants = cva('grow p-5', {\n  variants: {\n    variant: {\n      default: '',\n      accent: 'bg-card rounded-t-xl [&:last-child]:rounded-b-xl',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nconst cardTableVariants = cva('grid grow', {\n  variants: {\n    variant: {\n      default: '',\n      accent: 'bg-card rounded-xl',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nconst cardFooterVariants = cva('flex items-center px-5 min-h-14', {\n  variants: {\n    variant: {\n      default: 'border-t border-border',\n      accent: 'bg-card rounded-b-xl mt-[2px]',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\n// Card Component\nfunction Card({\n  className,\n  variant = 'default',\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof cardVariants>) {\n  return (\n    <CardContext.Provider value={{ variant: variant || 'default' }}>\n      <div data-slot=\"card\" className={cn(cardVariants({ variant }), className)} {...props} />\n    </CardContext.Provider>\n  );\n}\n\n// CardHeader Component\nfunction CardHeader({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return <div data-slot=\"card-header\" className={cn(cardHeaderVariants({ variant }), className)} {...props} />;\n}\n\n// CardContent Component\nfunction CardContent({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return <div data-slot=\"card-content\" className={cn(cardContentVariants({ variant }), className)} {...props} />;\n}\n\n// CardTable Component\nfunction CardTable({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return <div data-slot=\"card-table\" className={cn(cardTableVariants({ variant }), className)} {...props} />;\n}\n\n// CardFooter Component\nfunction CardFooter({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return <div data-slot=\"card-footer\" className={cn(cardFooterVariants({ variant }), className)} {...props} />;\n}\n\n// Other Components\nfunction CardHeading({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return <div data-slot=\"card-heading\" className={cn('space-y-1', className)} {...props} />;\n}\n\nfunction CardToolbar({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return <div data-slot=\"card-toolbar\" className={cn('flex items-center gap-2.5', className)} {...props} />;\n}\n\nfunction CardTitle({ className, ...props }: React.HTMLAttributes<HTMLHeadingElement>) {\n  return (\n    <h3\n      data-slot=\"card-title\"\n      className={cn('text-base font-semibold leading-none tracking-tight', className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return <div data-slot=\"card-description\" className={cn('text-sm text-muted-foreground', className)} {...props} />;\n}\n\n// Exports\nexport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardHeading, CardTable, CardTitle, CardToolbar };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}